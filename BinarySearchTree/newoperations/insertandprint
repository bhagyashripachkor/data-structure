package binaryserachtree;

public class BST {
	Node root;
	BST(){
		
	}
	
	public Node insert(int key){
		Node n = new Node(key);
		if(root == null){
			root = n;
		}else{
		
		Node current = null,parent=root;
		while(current != null){
			parent = current;
			if(key <= current.data)
				current = current.left;
			else
				current = current.right;
		}
		if(parent.data <= key)
			parent.right = n;
		else
			parent.left = n;
		}
		return root;
	}
	
	public void inorder(){
		
		inorder(root);
	}
	
	public void inorder(Node n){
		if(n != null){
		inorder(n.left);
		System.out.print(n.data+" ");
		inorder(n.right);
		}
	}
	
	public void preorder(){
		
		preorder(root);
	}
	
	public void preorder(Node n){
		if(n != null){
			System.out.print(n.data+" ");
		preorder(n.left);
		
		preorder(n.right);
		}
	}
	
public void postorder(){
		
		postorder(root);
	}
	
	public void postorder(Node n){
		if(n != null){
			
		postorder(n.left);
		
		postorder(n.right);
		System.out.print(n.data+" ");
		}
	}
	
}
